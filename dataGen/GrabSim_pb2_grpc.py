# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import GrabSim_pb2 as GrabSim__pb2


class GrabSimStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AcquireTypes = channel.unary_unary(
        '/GrabSim.GrabSim/AcquireTypes',
        request_serializer=GrabSim__pb2.NUL.SerializeToString,
        response_deserializer=GrabSim__pb2.TypeList.FromString,
        )
    self.AcquireAvailableMaps = channel.unary_unary(
        '/GrabSim.GrabSim/AcquireAvailableMaps',
        request_serializer=GrabSim__pb2.NUL.SerializeToString,
        response_deserializer=GrabSim__pb2.AvailableMaps.FromString,
        )
    self.AcquireWalkers = channel.unary_unary(
        '/GrabSim.GrabSim/AcquireWalkers',
        request_serializer=GrabSim__pb2.NUL.SerializeToString,
        response_deserializer=GrabSim__pb2.WalkerNames.FromString,
        )
    self.Init = channel.unary_unary(
        '/GrabSim.GrabSim/Init',
        request_serializer=GrabSim__pb2.NUL.SerializeToString,
        response_deserializer=GrabSim__pb2.NUL.FromString,
        )
    self.SetWorld = channel.unary_unary(
        '/GrabSim.GrabSim/SetWorld',
        request_serializer=GrabSim__pb2.BatchMap.SerializeToString,
        response_deserializer=GrabSim__pb2.World.FromString,
        )
    self.AddMaps = channel.unary_unary(
        '/GrabSim.GrabSim/AddMaps',
        request_serializer=GrabSim__pb2.MapList.SerializeToString,
        response_deserializer=GrabSim__pb2.World.FromString,
        )
    self.ObserveAll = channel.unary_unary(
        '/GrabSim.GrabSim/ObserveAll',
        request_serializer=GrabSim__pb2.NUL.SerializeToString,
        response_deserializer=GrabSim__pb2.World.FromString,
        )
    self.Reset = channel.unary_unary(
        '/GrabSim.GrabSim/Reset',
        request_serializer=GrabSim__pb2.ResetParams.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.MakeObjects = channel.unary_unary(
        '/GrabSim.GrabSim/MakeObjects',
        request_serializer=GrabSim__pb2.ObjectList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.GetHandGesture = channel.unary_unary(
        '/GrabSim.GrabSim/GetHandGesture',
        request_serializer=GrabSim__pb2.HandGestureParams.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.AddObjects = channel.unary_unary(
        '/GrabSim.GrabSim/AddObjects',
        request_serializer=GrabSim__pb2.ObjectList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.RemoveObjects = channel.unary_unary(
        '/GrabSim.GrabSim/RemoveObjects',
        request_serializer=GrabSim__pb2.RemoveList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.CleanObjects = channel.unary_unary(
        '/GrabSim.GrabSim/CleanObjects',
        request_serializer=GrabSim__pb2.SceneID.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.AddAnchors = channel.unary_unary(
        '/GrabSim.GrabSim/AddAnchors',
        request_serializer=GrabSim__pb2.AnchorList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.Observe = channel.unary_unary(
        '/GrabSim.GrabSim/Observe',
        request_serializer=GrabSim__pb2.SceneID.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.Do = channel.unary_unary(
        '/GrabSim.GrabSim/Do',
        request_serializer=GrabSim__pb2.Action.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.SetLidar = channel.unary_unary(
        '/GrabSim.GrabSim/SetLidar',
        request_serializer=GrabSim__pb2.LidarParams.SerializeToString,
        response_deserializer=GrabSim__pb2.LidarParams.FromString,
        )
    self.MoveHand = channel.unary_unary(
        '/GrabSim.GrabSim/MoveHand',
        request_serializer=GrabSim__pb2.HandTarget.SerializeToString,
        response_deserializer=GrabSim__pb2.ArmSequence.FromString,
        )
    self.Capture = channel.unary_unary(
        '/GrabSim.GrabSim/Capture',
        request_serializer=GrabSim__pb2.CameraList.SerializeToString,
        response_deserializer=GrabSim__pb2.CameraData.FromString,
        )
    self.AddObstacles = channel.unary_unary(
        '/GrabSim.GrabSim/AddObstacles',
        request_serializer=GrabSim__pb2.ObstacleList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.SetMovement = channel.unary_unary(
        '/GrabSim.GrabSim/SetMovement',
        request_serializer=GrabSim__pb2.MovementList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.GetAction = channel.unary_unary(
        '/GrabSim.GrabSim/GetAction',
        request_serializer=GrabSim__pb2.Scene.SerializeToString,
        response_deserializer=GrabSim__pb2.ActionList.FromString,
        )
    self.AddWalker = channel.unary_unary(
        '/GrabSim.GrabSim/AddWalker',
        request_serializer=GrabSim__pb2.WalkerList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.ControlWalkers = channel.unary_unary(
        '/GrabSim.GrabSim/ControlWalkers',
        request_serializer=GrabSim__pb2.WalkerControls.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.RemoveWalkers = channel.unary_unary(
        '/GrabSim.GrabSim/RemoveWalkers',
        request_serializer=GrabSim__pb2.RemoveList.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.CleanWalkers = channel.unary_unary(
        '/GrabSim.GrabSim/CleanWalkers',
        request_serializer=GrabSim__pb2.SceneID.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.ControlRobot = channel.unary_unary(
        '/GrabSim.GrabSim/ControlRobot',
        request_serializer=GrabSim__pb2.ControlInfo.SerializeToString,
        response_deserializer=GrabSim__pb2.Scene.FromString,
        )
    self.GetActuatorRanges = channel.unary_unary(
        '/GrabSim.GrabSim/GetActuatorRanges',
        request_serializer=GrabSim__pb2.SceneID.SerializeToString,
        response_deserializer=GrabSim__pb2.ActuatorList.FromString,
        )
    self.GetSensorDatas = channel.unary_unary(
        '/GrabSim.GrabSim/GetSensorDatas',
        request_serializer=GrabSim__pb2.SceneID.SerializeToString,
        response_deserializer=GrabSim__pb2.SensorList.FromString,
        )
    self.GetIKControlInfos = channel.unary_unary(
        '/GrabSim.GrabSim/GetIKControlInfos',
        request_serializer=GrabSim__pb2.HandPostureInfos.SerializeToString,
        response_deserializer=GrabSim__pb2.IKControlInfos.FromString,
        )
    self.ChangeCamera = channel.unary_unary(
        '/GrabSim.GrabSim/ChangeCamera',
        request_serializer=GrabSim__pb2.CameraInfo.SerializeToString,
        response_deserializer=GrabSim__pb2.ChangeCameraResult.FromString,
        )
    self.SetLightIntensity = channel.unary_unary(
        '/GrabSim.GrabSim/SetLightIntensity',
        request_serializer=GrabSim__pb2.FloatValue.SerializeToString,
        response_deserializer=GrabSim__pb2.NUL.FromString,
        )
    self.SetEnableEndPointCtrl = channel.unary_unary(
        '/GrabSim.GrabSim/SetEnableEndPointCtrl',
        request_serializer=GrabSim__pb2.EnableEndPointCtrl.SerializeToString,
        response_deserializer=GrabSim__pb2.NUL.FromString,
        )
    self.SetEndPointPosition = channel.unary_unary(
        '/GrabSim.GrabSim/SetEndPointPosition',
        request_serializer=GrabSim__pb2.EndPointPosition.SerializeToString,
        response_deserializer=GrabSim__pb2.NUL.FromString,
        )
    self.SetObjectJointAngle = channel.unary_unary(
        '/GrabSim.GrabSim/SetObjectJointAngle',
        request_serializer=GrabSim__pb2.ObjectJointCtrl.SerializeToString,
        response_deserializer=GrabSim__pb2.NUL.FromString,
        )


class GrabSimServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def AcquireTypes(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AcquireAvailableMaps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AcquireWalkers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Init(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetWorld(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddMaps(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ObserveAll(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MakeObjects(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetHandGesture(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddObjects(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveObjects(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CleanObjects(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddAnchors(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Observe(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Do(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetLidar(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MoveHand(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Capture(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddObstacles(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetMovement(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetAction(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddWalker(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ControlWalkers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveWalkers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CleanWalkers(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ControlRobot(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetActuatorRanges(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSensorDatas(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIKControlInfos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChangeCamera(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetLightIntensity(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetEnableEndPointCtrl(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetEndPointPosition(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetObjectJointAngle(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GrabSimServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AcquireTypes': grpc.unary_unary_rpc_method_handler(
          servicer.AcquireTypes,
          request_deserializer=GrabSim__pb2.NUL.FromString,
          response_serializer=GrabSim__pb2.TypeList.SerializeToString,
      ),
      'AcquireAvailableMaps': grpc.unary_unary_rpc_method_handler(
          servicer.AcquireAvailableMaps,
          request_deserializer=GrabSim__pb2.NUL.FromString,
          response_serializer=GrabSim__pb2.AvailableMaps.SerializeToString,
      ),
      'AcquireWalkers': grpc.unary_unary_rpc_method_handler(
          servicer.AcquireWalkers,
          request_deserializer=GrabSim__pb2.NUL.FromString,
          response_serializer=GrabSim__pb2.WalkerNames.SerializeToString,
      ),
      'Init': grpc.unary_unary_rpc_method_handler(
          servicer.Init,
          request_deserializer=GrabSim__pb2.NUL.FromString,
          response_serializer=GrabSim__pb2.NUL.SerializeToString,
      ),
      'SetWorld': grpc.unary_unary_rpc_method_handler(
          servicer.SetWorld,
          request_deserializer=GrabSim__pb2.BatchMap.FromString,
          response_serializer=GrabSim__pb2.World.SerializeToString,
      ),
      'AddMaps': grpc.unary_unary_rpc_method_handler(
          servicer.AddMaps,
          request_deserializer=GrabSim__pb2.MapList.FromString,
          response_serializer=GrabSim__pb2.World.SerializeToString,
      ),
      'ObserveAll': grpc.unary_unary_rpc_method_handler(
          servicer.ObserveAll,
          request_deserializer=GrabSim__pb2.NUL.FromString,
          response_serializer=GrabSim__pb2.World.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=GrabSim__pb2.ResetParams.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'MakeObjects': grpc.unary_unary_rpc_method_handler(
          servicer.MakeObjects,
          request_deserializer=GrabSim__pb2.ObjectList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'GetHandGesture': grpc.unary_unary_rpc_method_handler(
          servicer.GetHandGesture,
          request_deserializer=GrabSim__pb2.HandGestureParams.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'AddObjects': grpc.unary_unary_rpc_method_handler(
          servicer.AddObjects,
          request_deserializer=GrabSim__pb2.ObjectList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'RemoveObjects': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveObjects,
          request_deserializer=GrabSim__pb2.RemoveList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'CleanObjects': grpc.unary_unary_rpc_method_handler(
          servicer.CleanObjects,
          request_deserializer=GrabSim__pb2.SceneID.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'AddAnchors': grpc.unary_unary_rpc_method_handler(
          servicer.AddAnchors,
          request_deserializer=GrabSim__pb2.AnchorList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'Observe': grpc.unary_unary_rpc_method_handler(
          servicer.Observe,
          request_deserializer=GrabSim__pb2.SceneID.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'Do': grpc.unary_unary_rpc_method_handler(
          servicer.Do,
          request_deserializer=GrabSim__pb2.Action.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'SetLidar': grpc.unary_unary_rpc_method_handler(
          servicer.SetLidar,
          request_deserializer=GrabSim__pb2.LidarParams.FromString,
          response_serializer=GrabSim__pb2.LidarParams.SerializeToString,
      ),
      'MoveHand': grpc.unary_unary_rpc_method_handler(
          servicer.MoveHand,
          request_deserializer=GrabSim__pb2.HandTarget.FromString,
          response_serializer=GrabSim__pb2.ArmSequence.SerializeToString,
      ),
      'Capture': grpc.unary_unary_rpc_method_handler(
          servicer.Capture,
          request_deserializer=GrabSim__pb2.CameraList.FromString,
          response_serializer=GrabSim__pb2.CameraData.SerializeToString,
      ),
      'AddObstacles': grpc.unary_unary_rpc_method_handler(
          servicer.AddObstacles,
          request_deserializer=GrabSim__pb2.ObstacleList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'SetMovement': grpc.unary_unary_rpc_method_handler(
          servicer.SetMovement,
          request_deserializer=GrabSim__pb2.MovementList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'GetAction': grpc.unary_unary_rpc_method_handler(
          servicer.GetAction,
          request_deserializer=GrabSim__pb2.Scene.FromString,
          response_serializer=GrabSim__pb2.ActionList.SerializeToString,
      ),
      'AddWalker': grpc.unary_unary_rpc_method_handler(
          servicer.AddWalker,
          request_deserializer=GrabSim__pb2.WalkerList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'ControlWalkers': grpc.unary_unary_rpc_method_handler(
          servicer.ControlWalkers,
          request_deserializer=GrabSim__pb2.WalkerControls.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'RemoveWalkers': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveWalkers,
          request_deserializer=GrabSim__pb2.RemoveList.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'CleanWalkers': grpc.unary_unary_rpc_method_handler(
          servicer.CleanWalkers,
          request_deserializer=GrabSim__pb2.SceneID.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'ControlRobot': grpc.unary_unary_rpc_method_handler(
          servicer.ControlRobot,
          request_deserializer=GrabSim__pb2.ControlInfo.FromString,
          response_serializer=GrabSim__pb2.Scene.SerializeToString,
      ),
      'GetActuatorRanges': grpc.unary_unary_rpc_method_handler(
          servicer.GetActuatorRanges,
          request_deserializer=GrabSim__pb2.SceneID.FromString,
          response_serializer=GrabSim__pb2.ActuatorList.SerializeToString,
      ),
      'GetSensorDatas': grpc.unary_unary_rpc_method_handler(
          servicer.GetSensorDatas,
          request_deserializer=GrabSim__pb2.SceneID.FromString,
          response_serializer=GrabSim__pb2.SensorList.SerializeToString,
      ),
      'GetIKControlInfos': grpc.unary_unary_rpc_method_handler(
          servicer.GetIKControlInfos,
          request_deserializer=GrabSim__pb2.HandPostureInfos.FromString,
          response_serializer=GrabSim__pb2.IKControlInfos.SerializeToString,
      ),
      'ChangeCamera': grpc.unary_unary_rpc_method_handler(
          servicer.ChangeCamera,
          request_deserializer=GrabSim__pb2.CameraInfo.FromString,
          response_serializer=GrabSim__pb2.ChangeCameraResult.SerializeToString,
      ),
      'SetLightIntensity': grpc.unary_unary_rpc_method_handler(
          servicer.SetLightIntensity,
          request_deserializer=GrabSim__pb2.FloatValue.FromString,
          response_serializer=GrabSim__pb2.NUL.SerializeToString,
      ),
      'SetEnableEndPointCtrl': grpc.unary_unary_rpc_method_handler(
          servicer.SetEnableEndPointCtrl,
          request_deserializer=GrabSim__pb2.EnableEndPointCtrl.FromString,
          response_serializer=GrabSim__pb2.NUL.SerializeToString,
      ),
      'SetEndPointPosition': grpc.unary_unary_rpc_method_handler(
          servicer.SetEndPointPosition,
          request_deserializer=GrabSim__pb2.EndPointPosition.FromString,
          response_serializer=GrabSim__pb2.NUL.SerializeToString,
      ),
      'SetObjectJointAngle': grpc.unary_unary_rpc_method_handler(
          servicer.SetObjectJointAngle,
          request_deserializer=GrabSim__pb2.ObjectJointCtrl.FromString,
          response_serializer=GrabSim__pb2.NUL.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'GrabSim.GrabSim', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
